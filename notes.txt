
Key Relationships

IDENTIFYING / NON-IDENTIFYING RELATIONSHIP
The terms identifying relationship and non-identifying relationship refer to how the primary key
of the table on the many side is supposed to be constructed. The theory is that for identifying
relationships, the primary key of the one table cascades down to the many table, and is concatenated
to the identifier of the many table to form the primary key. Many CASE tools that you can use to
draw ERDs implement this theory as a rule that you can't easily circumvent.

The non-identifying relationship doesn't have a restriction about cascading the primary key.
Each table has its own unique identifier; neither table inherits part of its primary key from the other.

mysqldump -umotdbuser -p -d mot2 | mysql -umotdbuser -p -D mot3

mysql -umotdbuser -h dev -p -D mot3 < <(mysqldump -umotdbuser -h dev -p -d mot2)

TODO

Need to extend spidering to allow for missing objects on either side of diff. e.g.

table - nil
fk - nil
nil - field

and so on.

 1 - scan the source and look for corresponding object on dest.
 2 - scan the dest look for new objects not on src.
 3 - Move the results into an object (db?) that is virtual? That way both scans can update same obj with diffs

 virtual db needs to state nils on either side



